{"version":3,"file":"static/js/293.4a2a02fc.chunk.js","mappings":"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","sources":["assets/delete.svg","components/auth/ViewContributions.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.bde675c38d54979f589e6b290bea398a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC, useEffect, useState, MouseEvent } from \"react\";\nimport { ViewContributionsProps, ViewContributionsDbData, Post, Comment } from \"../../types/interfaces\";\nimport uniqid from 'uniqid';\nimport '../../styles/auth/ViewContributions.css';\nimport deleteSVG from '../../assets/delete.svg';\nimport { deleteDoc, doc, DocumentData, DocumentSnapshot, getDoc } from \"firebase/firestore\";\nimport { User } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, updateDoc } from \"firebase/firestore\";\n\nconst ViewContributions: FC<ViewContributionsProps> = (props): JSX.Element => {\n\n  const { currentUser, toggleViewContributionsPage } = props;\n\n  const [viewing, setViewing] = useState({\n    current: '',\n  }),\n  [dbData, setDbData] = useState<ViewContributionsDbData>({\n    posts: [],\n    comments: [],\n    favorites: [],\n  });\n\n  // Initialize Firebase\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDsPecBa3Ch5uDw4UzHiJWAjKEYOKCrNdA\",\n    authDomain: \"espressit.firebaseapp.com\",\n    projectId: \"espressit\",\n    storageBucket: \"espressit.appspot.com\",\n    messagingSenderId: \"1094129721341\",\n    appId: \"1:1094129721341:web:dc2bdc0a2b322504b04394\"\n  },\n  app = initializeApp(firebaseConfig),\n  db = getFirestore(app);\n\n  const userRef = currentUser as User;\n\n  useEffect(() => {\n    // query db for posts, comments, and favorites on mount\n    (async function fetchDataFromDb() {\n\n      const userInstanceRef = doc(db, \"users\", userRef.uid);\n      const userInstanceSnap = await getDoc(userInstanceRef);\n\n      if (userInstanceSnap.exists()) {\n        // save posts, comments, favorites to local state for use\n        const posts = userInstanceSnap.data().posts;\n        const comments = userInstanceSnap.data().comments;\n        const favorites = userInstanceSnap.data().favoritePosts;\n\n        setDbData({\n          posts: posts,\n          comments: comments,\n          favorites: favorites,\n        });\n\n      };\n    })();\n  }, []);\n\n  const handleViewChange = (change: string): void => {\n    setViewing({\n      current: change,\n    });\n  };\n\n  const handleDeleteEvent = async (type: string, itemToDelete: Post | Comment): Promise<void> => {\n\n    const userInstanceRef = doc(db, \"users\", userRef.uid),\n          userInstanceSnap = await getDoc(userInstanceRef);\n\n    if (userInstanceSnap.exists()) {\n      // access granted to userInstance\n      if (type === \"post\") {\n        deletePost(userInstanceSnap.data().posts, (itemToDelete as Post), userInstanceRef);\n        return;\n      };\n  \n      if (type === \"comment\") {\n        deleteComment(userInstanceSnap.data().comments, (itemToDelete as Comment), userInstanceRef);\n        return;\n      };\n  \n      if (type === \"favorite\") {\n        deleteFavorite(userInstanceSnap.data().favoritePosts, (itemToDelete as Post), userInstanceRef);\n        return;\n      };\n    };\n  };\n\n  const deletePost = async (userInstanceData: Post, itemToDelete: Post, userInstanceRef: any): Promise<void> => {\n     // remove userInstance of post\n     const postList: any[] = (userInstanceData as any),\n           filteredList: any[] = postList.filter((element: Post) => element.pid !== (itemToDelete as Post).pid);\n\n     await updateDoc(userInstanceRef, {\n       posts: filteredList,\n     });\n\n     // remove posts instance of post\n     await deleteDoc(doc(db, \"posts\", (itemToDelete as Post).pid));\n\n     setDbData({\n       posts: filteredList,\n       comments: dbData.comments,\n       favorites: dbData.favorites,\n     });\n\n     return;\n\n  };\n\n  const deleteComment = async (userInstanceData: Post, itemToDelete: Comment, userInstanceRef: any): Promise<void> => {\n\n    // remove userInstance of post\n    const commentList: any[] = (userInstanceData as any),\n          filteredList: any[] = commentList.filter((comment: Comment) => (comment as Comment).comment !== (itemToDelete as Comment).comment);\n\n    await updateDoc(userInstanceRef, {\n      comments: filteredList,\n    });\n\n   // get post from db to remove comment from post instance\n   const postRef = doc(db, \"posts\", (itemToDelete as Comment).pid),\n         postSnap = await getDoc(postRef);\n\n   if (postSnap.exists()) {\n\n     const commentList = postSnap.data().comments,\n           filteredList = commentList.filter((comment: Comment) => (comment as Comment).comment !== (itemToDelete as Comment).comment);\n\n     await updateDoc(postRef, {\n       comments: filteredList,\n     });\n\n   } else {\n     alert('we were not able to remove your comment from the original post, but it was removed from your account; please reach out to dutsandrew@gmail.com to resolve this issue');\n   };\n\n   setDbData({\n     posts: dbData.posts,\n     comments: filteredList,\n     favorites: dbData.favorites,\n   });\n\n   return;\n  };\n\n  const deleteFavorite = async (userInstanceData: Post, itemToDelete: Post, userInstanceRef: any): Promise<void> => {\n\n    const favoritesList: any[] = (userInstanceData as any),\n          filteredList: any[] = favoritesList.filter((element: Post) => element.pid !== itemToDelete.pid);\n\n    await updateDoc(userInstanceRef, {\n      favoritePosts: filteredList,\n    });\n\n    setDbData({\n      posts: dbData.posts,\n      comments: dbData.comments,\n      favorites: filteredList,\n    });\n\n  };\n\n  if (viewing.current.length === 0) {\n    return (\n      <div className=\"view-contributions-container\">\n        <button \n          className=\"close-view-contributions-button\"\n          onClick={() => toggleViewContributionsPage()} >\n          Return to Home\n        </button>\n        <h1 className=\"view-contributions-prompt\">\n          Select one of the following:\n        </h1>\n        <div className=\"contributions-nav\">\n          <h2 \n            className=\"contributions-post-selector\"\n            onClick={() => handleViewChange(\"posts\")} >\n            Posts\n          </h2>\n          <p className=\"contributions-nav-divider\">\n            |\n          </p>\n          <h2 \n            className=\"contributions-comments-selector\"\n            onClick={() => handleViewChange(\"comments\")} >\n            Comments\n          </h2>\n          <p className=\"contributions-nav-divider\">\n            |\n          </p>\n          <h2 \n            className=\"contributions-favorites-selector\" \n            onClick={() => handleViewChange(\"favorites\")} >\n            Favorites\n          </h2>\n        </div>\n      </div>\n    );\n  };\n\n  if (viewing.current === \"posts\") {\n    if (dbData.posts.length === 0) {\n      return (\n          <div className=\"view-contributions-container\">\n            <button \n              className=\"close-view-contributions-button\"\n              onClick={() => toggleViewContributionsPage()} >\n              Return to Home\n            </button>\n            <div className=\"contributions-nav\">\n              <h2 \n                className=\"contributions-post-selector\"\n                onClick={() => handleViewChange(\"posts\")} >\n                Posts\n              </h2>\n              <p className=\"contributions-nav-divider\">\n                |\n              </p>\n              <h2 \n                className=\"contributions-comments-selector\"\n                onClick={() => handleViewChange(\"comments\")} >\n                Comments\n              </h2>\n              <p className=\"contributions-nav-divider\">\n                |\n              </p>\n              <h2 \n                className=\"contributions-favorites-selector\" \n                onClick={() => handleViewChange(\"favorites\")} >\n                Favorites\n              </h2>\n            </div>\n            <div \n              className=\"view-contributions-posts-container\">\n              <p\n                className=\"view-contributions-none-text\">\n                You don't have any contributions in this category, go make some!\n              </p>\n            </div>\n          </div>\n      );\n    } else {\n      return (\n        <div className=\"view-contributions-container\">\n          <button \n            className=\"close-view-contributions-button\"\n            onClick={() => toggleViewContributionsPage()} >\n            Return to Home\n          </button>\n          <div className=\"contributions-nav\">\n            <h2 \n              className=\"contributions-post-selector\"\n              onClick={() => handleViewChange(\"posts\")} >\n              Posts\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-comments-selector\"\n              onClick={() => handleViewChange(\"comments\")} >\n              Comments\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-favorites-selector\" \n              onClick={() => handleViewChange(\"favorites\")} >\n              Favorites\n            </h2>\n          </div>\n          <div \n            className=\"view-contributions-posts-container\">\n            {Array.isArray(dbData.posts) && dbData.posts.map((post) => {\n              return <div className=\"view-contributions-post\"\n                key={uniqid()}>\n                <p \n                  className=\"view-contributions-post-text\">\n                  {post.title.length > 75 ? post.title.slice(0, 75).concat('...') : post.title}\n                </p>\n                <img \n                  className=\"view-contributions-post-delete-svg\"\n                  alt=\"delete icon\"\n                  src={deleteSVG}\n                  onClick={() => handleDeleteEvent('post', post)} >\n                </img>\n              </div>\n            })}\n          </div>\n        </div>\n      );\n    };\n  };\n\n  if (viewing.current === \"comments\") {\n    if (dbData.comments.length === 0) {\n      return (\n        <div className=\"view-contributions-container\">\n          <button \n            className=\"close-view-contributions-button\"\n            onClick={() => toggleViewContributionsPage()} >\n            Return to Home\n          </button>\n          <div className=\"contributions-nav\">\n            <h2 \n              className=\"contributions-post-selector\"\n              onClick={() => handleViewChange(\"posts\")} >\n              Posts\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-comments-selector\"\n              onClick={() => handleViewChange(\"comments\")} >\n              Comments\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-favorites-selector\" \n              onClick={() => handleViewChange(\"favorites\")} >\n              Favorites\n            </h2>\n          </div>\n          <div \n            className=\"view-contributions-posts-container\">\n            <p\n              className=\"view-contributions-none-text\">\n              You don't have any contributions in this category, go make some!\n            </p>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"view-contributions-container\">\n          <button \n            className=\"close-view-contributions-button\"\n            onClick={() => toggleViewContributionsPage()} >\n            Return to Home\n          </button>\n          <div className=\"contributions-nav\">\n            <h2 \n              className=\"contributions-post-selector\"\n              onClick={() => handleViewChange(\"posts\")} >\n              Posts\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-comments-selector\"\n              onClick={() => handleViewChange(\"comments\")} >\n              Comments\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-favorites-selector\" \n              onClick={() => handleViewChange(\"favorites\")} >\n              Favorites\n            </h2>\n          </div>\n          <div \n            className=\"view-contributions-comments-container\">\n            {Array.isArray(dbData.comments) && dbData.comments.map((comment) => {\n              return <div className=\"view-contributions-comments\"\n                key={uniqid()}>\n                <p \n                  className=\"view-contributions-comment-text\">\n                  {comment.comment.length > 75 ? comment.comment.slice(0, 75).concat('...') : comment.comment}\n                </p>\n                <img \n                  className=\"view-contributions-comment-delete-svg\"\n                  alt=\"delete icon\"\n                  src={deleteSVG}\n                  onClick={() => handleDeleteEvent('comment', comment)} >\n                </img>\n              </div>\n            })}\n          </div>\n        </div>\n      );\n    };\n  };\n\n  if (viewing.current === \"favorites\") {\n    if (dbData.favorites.length === 0) {\n      return (\n        <div className=\"view-contributions-container\">\n          <button \n            className=\"close-view-contributions-button\"\n            onClick={() => toggleViewContributionsPage()} >\n            Return to Home\n          </button>\n          <div className=\"contributions-nav\">\n            <h2 \n              className=\"contributions-post-selector\"\n              onClick={() => handleViewChange(\"posts\")} >\n              Posts\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-comments-selector\"\n              onClick={() => handleViewChange(\"comments\")} >\n              Comments\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-favorites-selector\" \n              onClick={() => handleViewChange(\"favorites\")} >\n              Favorites\n            </h2>\n          </div>\n          <div \n            className=\"view-contributions-posts-container\">\n            <p\n              className=\"view-contributions-none-text\">\n              You don't have any contributions in this category, go make some!\n            </p>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"view-contributions-container\">\n          <button \n            className=\"close-view-contributions-button\"\n            onClick={() => toggleViewContributionsPage()} >\n            Return to Home\n          </button>\n          <div className=\"contributions-nav\">\n            <h2 \n              className=\"contributions-post-selector\"\n              onClick={() => handleViewChange(\"posts\")} >\n              Posts\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-comments-selector\"\n              onClick={() => handleViewChange(\"comments\")} >\n              Comments\n            </h2>\n            <p className=\"contributions-nav-divider\">\n              |\n            </p>\n            <h2 \n              className=\"contributions-favorites-selector\" \n              onClick={() => handleViewChange(\"favorites\")} >\n              Favorites\n            </h2>\n          </div>\n          <div \n            className=\"view-contributions-favorites-container\">\n            {Array.isArray(dbData.favorites) && dbData.favorites.map((favorite) => {\n              return <div className=\"view-contributions-favorite\"\n                key={uniqid()}>\n                <p \n                  className=\"view-contributions-favorite-text\">\n                  {favorite.title.length > 75 ? favorite.title.slice(0, 75).concat('...') : favorite.title}\n                </p>\n                <img \n                  className=\"view-contributions-favorite-delete-svg\"\n                  alt=\"delete icon\"\n                  src={deleteSVG}\n                  onClick={() => handleDeleteEvent('favorite', favorite)} >\n                </img>\n              </div>\n            })}\n          </div>\n        </div>\n      );\n    };\n  };\n\n  return (\n    <p>Error, please try again later</p>\n  );\n};\n\nexport default ViewContributions;"],"names":["props","currentUser","toggleViewContributionsPage","useState","current","viewing","setViewing","posts","comments","favorites","dbData","setDbData","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","userRef","useEffect","userInstanceRef","doc","uid","getDoc","userInstanceSnap","exists","data","favoritePosts","handleViewChange","change","handleDeleteEvent","type","itemToDelete","deletePost","deleteComment","deleteFavorite","userInstanceData","filteredList","filter","element","pid","updateDoc","deleteDoc","comment","postRef","postSnap","commentList","alert","length","className","onClick","Array","isArray","map","post","title","slice","concat","alt","src","deleteSVG","uniqid","favorite"],"sourceRoot":""}