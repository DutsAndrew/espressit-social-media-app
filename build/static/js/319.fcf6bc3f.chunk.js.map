{"version":3,"file":"static/js/319.fcf6bc3f.chunk.js","mappings":"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","sources":["components/auth/CreateAccount.tsx"],"sourcesContent":["import React, { FC, MouseEventHandler, KeyboardEvent } from \"react\";\nimport { CreateAccountProps } from '../../types/interfaces';\nimport '../../styles/auth/CreateAccount.css';\nconst Filter = require('bad-words');\n\nconst CreateAccount: FC<CreateAccountProps> = (props): JSX.Element => {\n\n  const { createAccountWithEmailAndPassword, handleSignUp } = props;\n\n  const usernameFormat: RegExp = /^[a-z]{3,12}$|^[a-z]{3,12}\\d{2,4}$/g,\n        mailFormat: RegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/g,\n        passwordFormat: RegExp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/g,\n        filter = new Filter();\n\n  const handleFormChange = (e: any): void => {\n\n    const entryThatChanged = e.target as HTMLInputElement,\n          errorText = e.target.nextSibling;\n\n    if (entryThatChanged && errorText) {\n      if ((entryThatChanged.validity.valid && entryThatChanged.value.match(usernameFormat) && !filter.isProfane(entryThatChanged.value))\n        || (entryThatChanged.validity.valid && entryThatChanged.value.match(mailFormat))\n        || (entryThatChanged.validity.valid && entryThatChanged.value.match(passwordFormat))\n      ) {\n        errorText.textContent = \"\";\n        errorText.className = \"error\";\n      } else {\n        showError(entryThatChanged, errorText);\n      };\n    };\n\n  };\n\n  const showError = (entry: any, error: any): void => {\n\n    if (entry.id === 'username-input') {\n      if (entry.validity.valueMissing) {\n        error.textContent = \"You must have a username to create an account\";\n        error.classList.add(\"error\", \"error-active\");\n      } else if (!entry.value.match(usernameFormat)) {\n        error.textContent = \"Your username does not match our rules of: 1) 3-12 lowercase letters or 3-12 lowercase letters and 2-4 numbers, 2) no symbols, 3) no uppercase characters\";\n        error.classList.add(\"error\", \"error-active\");\n      } else if (filter.isProfane(entry.value)) {\n        error.textContent = \"We don't allow profanity in usernames, sorry :(\";\n        error.classList.add(\"error\", \"error-active\");\n      };\n      return;\n    };\n\n    if (entry.id === 'email-input') {\n      if (entry.validity.valueMissing) {\n        error.textContent = \"You need to enter an email address\";\n        error.classList.add(\"error\", \"error-active\");\n      } else if (!entry.value.match(mailFormat)) {\n        error.textContent = `Your email address doesn't seem to follow the traditional email patterns, please try again`;\n        error.classList.add(\"error\", \"error-active\");\n      } else if (entry.validity.tooShort) {\n        error.textContent = `Your email should be at least ${entry.minLength} characters; you entered: ${entry.value.length}`;\n        error.classList.add(\"error\", \"error-active\");\n      } else if (entry.validity.tooLong) {\n        error.textContent = `Your email should be no more than ${entry.maxLength} characters; you entered: ${entry.value.length}`;\n        error.classList.add(\"error\", \"error-active\");\n      }\n      return;\n    };\n\n    if (entry.id === 'password-input') {\n      if (entry.validity.valueMissing) {\n        error.textContent = \"You need to enter a password\";\n        error.classList.add(\"error\", \"error-active\");\n      } else if (!entry.value.match(passwordFormat)) {\n        error.textContent = `Your password must have at least: 1) One uppercase letter, 2) One lowercase letter, 3) One number, 4) One symbol, 5) And be at least 8 characters in length`;\n        error.classList.add(\"error\", \"error-active\");\n      } else if (entry.validity.tooShort) {\n        error.textContent = `Your password should be at least ${entry.minLength} characters; you entered: ${entry.value.length}`;\n        error.classList.add(\"error\", \"error-active\");\n      } else if (entry.validity.tooLong) {\n        error.textContent = `Your password should be no more than ${entry.maxLength} characters; you entered: ${entry.value.length}`;\n        error.classList.add(\"error\", \"error-active\");\n      }\n      return;\n    };\n\n    if (entry.id === 'password-confirm-input') {\n      if (entry.validity.valueMissing) {\n        error.textContent = \"You need to confirm your password\";\n        error.classList.add(\"error\", \"error-active\");\n      } else if (entry.value !== entry.previousSibling.previousSibling.value) {\n        error.textContent = `Your passwords do not match`;\n        error.classList.add(\"error\", \"error-active\");\n      }\n      return;\n    };\n  };\n\n  const submitAccountCreationForm = (e: any): void  => {\n    e.preventDefault();\n\n    const usernameEntry = (document.getElementById(\"username-input\") as HTMLInputElement),\n          emailEntry = (document.getElementById(\"email-input\") as HTMLInputElement),\n          passwordEntry = (document.getElementById(\"password-input\") as HTMLInputElement),\n          passwordConfirmEntry = (document.getElementById(\"password-confirm-input\") as HTMLInputElement),\n          activeErrors = document.querySelectorAll('.error-active').length;\n\n    if (usernameEntry) {\n      if (!usernameEntry.validity.valid || !usernameEntry.value.match(usernameFormat)) {\n        showError(usernameEntry, usernameEntry.nextSibling);\n        return;\n      };\n    };\n\n    if (emailEntry) {\n      if (!emailEntry.validity.valid || !emailEntry.value.match(mailFormat)) {\n        showError(emailEntry, emailEntry.nextSibling);\n        return;\n      };\n    };\n\n    if (passwordEntry) {\n      if (!passwordEntry.validity.valid || !passwordEntry.value.match(passwordFormat)) {\n        showError(passwordEntry, passwordEntry.nextSibling);\n        return;\n      };\n    };\n\n    if (passwordConfirmEntry) {\n      if ((!passwordConfirmEntry.validity.valid || !passwordConfirmEntry.value.match(passwordFormat))\n        && passwordEntry.value === passwordConfirmEntry.value\n        ) {\n          showError(passwordConfirmEntry, passwordConfirmEntry.nextSibling);\n          return;\n      };\n    };\n\n    if (emailEntry.validity.valid\n      && passwordEntry.validity.valid\n      && passwordConfirmEntry.validity.valid\n      && activeErrors === 0\n      ) {\n        createAccountWithEmailAndPassword(usernameEntry.value, emailEntry.value, passwordEntry.value);\n      };\n  };\n\n  return (\n    <form id=\"user-creation-form\"\n      onKeyDown={(e) => e.key === \"Enter\" ? e.preventDefault() : null} >\n      <button id=\"close-form-button\"\n        onClick={handleSignUp as unknown as MouseEventHandler<HTMLButtonElement>} >\n        X Close Form\n      </button>\n      <fieldset id=\"create-account-fieldset\" >\n        <legend id=\"create-account-legend\">\n          Create an account:\n        </legend>\n        <label htmlFor=\"username-input\" \n          id=\"username-label\">\n          *Username:\n        </label>\n        <input id=\"username-input\" \n          placeholder=\"MischievousJack92\"\n          onChange={handleFormChange}\n          minLength={3}\n          maxLength={16}\n          type=\"text\"\n          required>\n        </input>\n        <p id=\"username-input-error\"\n          className =\"error-msg\" >\n        </p>\n        <label htmlFor=\"email-input\"\n          id=\"email-label\" >\n          *Email:\n        </label>\n        <input id=\"email-input\" \n          placeholder=\"JohnWick92@gmail.com\"\n          onChange={handleFormChange}\n          minLength={9}\n          maxLength={253}\n          type=\"email\"\n          required>\n        </input>\n        <p id=\"email-input-error\"\n          className =\"error-msg\" >\n        </p>\n        <label htmlFor=\"password-input\"\n          id=\"password-label\" >\n          *Password:\n        </label>\n        <input id=\"password-input\"\n          placeholder=\"********\"\n          onChange={handleFormChange}\n          minLength={8}\n          maxLength={127}\n          type=\"password\"\n          data-testid=\"password-input\"\n          required>\n        </input>\n        <p id=\"password-input-error\"\n          className =\"error-msg\" >\n        </p>\n        <label htmlFor=\"password-confirm-input\"\n          id=\"password-confirm-label\" >\n          *Confirm Password:\n        </label>\n        <input id=\"password-confirm-input\"\n          placeholder=\"********\"\n          onChange={(e) => handleFormChange(e)}\n          minLength={8}\n          maxLength={127}\n          type=\"password\"\n          data-testid=\"confirm-password-input\"\n          required>\n        </input>\n        <p id=\"password-confirm-input-error\"\n          className =\"error-msg\" >\n        </p>\n        <button id=\"account-submit\"\n          type=\"button\"\n          onClick={(e) => submitAccountCreationForm(e)}>\n            Submit\n        </button>\n      </fieldset>\n    </form>\n  );\n};\n\nexport default CreateAccount;"],"names":["Filter","require","props","createAccountWithEmailAndPassword","handleSignUp","usernameFormat","mailFormat","passwordFormat","filter","handleFormChange","e","entryThatChanged","target","errorText","nextSibling","validity","valid","value","match","isProfane","textContent","className","showError","entry","error","id","valueMissing","classList","add","previousSibling","tooShort","minLength","length","tooLong","maxLength","onKeyDown","key","preventDefault","onClick","htmlFor","placeholder","onChange","type","required","usernameEntry","document","getElementById","emailEntry","passwordEntry","passwordConfirmEntry","activeErrors","querySelectorAll","submitAccountCreationForm"],"sourceRoot":""}