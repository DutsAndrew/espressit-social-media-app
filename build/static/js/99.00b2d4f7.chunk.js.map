{"version":3,"file":"static/js/99.00b2d4f7.chunk.js","mappings":"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","sources":["assets/profile-anonymous.svg","components/auth/AccountDisplay.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgProfileAnonymous(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgProfileAnonymous);\nexport default __webpack_public_path__ + \"static/media/profile-anonymous.dda40cce0d021517f9667c96637e7f66.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC, useEffect, useState } from \"react\";\nimport { AccountDisplayProps, UserInstance } from \"../../types/interfaces\";\nimport { User } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport anonymousProfile from '../../assets/profile-anonymous.svg';\nimport chevron from '../../assets/chevron-down.svg';\nimport '../../styles/auth/AccountDisplay.css';\n\nconst AccountDisplay: FC<AccountDisplayProps> = (props): JSX.Element => {\n\n  const { \n    currentUser,\n    signOut,\n    toggleEditProfilePage,\n    toggleViewContributionsPage \n  } = props;\n\n  // converting potential non-auth user to guaranteed firebase auth user\n  const userRef = currentUser as User;\n\n  const [userInstance, setUserInstance] = useState<UserInstance>({\n    user: {\n      comments: [],\n      displayName: \"\",\n      favoritePosts: [],\n      posts: [],\n      imgURL: \"\",\n      uid: \"\",\n      username: \"\",\n    },\n  });\n\n  useEffect(() => {\n    (async function fetchUserInstance() {\n\n      //firebase config\n      const firebaseConfig = {\n        apiKey: \"AIzaSyDsPecBa3Ch5uDw4UzHiJWAjKEYOKCrNdA\",\n        authDomain: \"espressit.firebaseapp.com\",\n        projectId: \"espressit\",\n        storageBucket: \"espressit.appspot.com\",\n        messagingSenderId: \"1094129721341\",\n        appId: \"1:1094129721341:web:dc2bdc0a2b322504b04394\"\n      };\n      // Initialize Firebase\n      const app = initializeApp(firebaseConfig),\n            db = getFirestore(app),\n            // fetch userInstance\n            userInstanceRef = doc(db, \"users\", userRef.uid),\n            userInstanceSnap = await getDoc(userInstanceRef);\n\n      if (userInstanceSnap.exists()) {\n        const userInstanceData = userInstanceSnap.data();\n  \n        // sync local state with user data\n        setUserInstance({\n          user: {\n            comments: userInstanceData.comments,\n            displayName: userInstanceData.displayName,\n            favoritePosts: userInstanceData.favoritePosts,\n            posts: userInstanceData.posts,\n            imgURL: userInstanceData.imgURL,\n            uid: userInstanceData.uid,\n            username: userInstanceData.username,\n          },\n        });\n      };\n    })();\n  }, []);\n\n  const accountDropDown = (e: React.MouseEvent) => {\n\n    // open and closes drop down menu\n    const profileContainer = document.querySelector('.profile-container'),\n          dropDownMenu = document.querySelector('.account-drop-down-menu'),\n          chevronButton = document.querySelector('.account-menu-button'),\n          profileText = document.querySelector('.profile-text'),\n          homePage = document.querySelector('#home-page-web');\n\n    let timer;\n      \n    if (!dropDownMenu) {\n\n      // if on mobile hide home page to be able to interact with drop down\n      homePage?.classList.remove('home-page-web');\n      homePage?.classList.add('home-page-web-hidden');\n\n      chevronButton?.classList.add('drop-down-active');\n      profileText?.classList.add('drop-down-text-active');\n      const dropDownMenu = document.createElement('div');\n        dropDownMenu.classList.remove('account-menu-button');\n        dropDownMenu.classList.add('account-drop-down-menu');\n      const signOut = document.createElement('p');\n        signOut.classList.add('sign-out-text');\n        signOut.textContent = 'Sign Out';\n      const editProfile = document.createElement('p');\n        editProfile.classList.add('edit-profile-text');\n        editProfile.textContent = 'Edit Profile';\n      const viewContributions = document.createElement('p');\n        viewContributions.classList.add('view-contributions-text');\n        viewContributions.textContent = 'View Contributions';\n\n      dropDownMenu.appendChild(signOut);\n      dropDownMenu.appendChild(editProfile);\n      dropDownMenu.appendChild(viewContributions);\n      profileContainer?.appendChild(dropDownMenu);\n\n      timer = setTimeout(() => {\n\n        dropDownMenu?.remove()\n        chevronButton?.classList.remove('drop-down-active');\n        chevronButton?.classList.add('account-menu-button');\n        profileText?.classList.remove('drop-down-text-active');\n\n        // if on mobile remove hidden home page to interact with feed/posts again\n        homePage?.classList.remove('home-page-web-hidden');\n        homePage?.classList.add('home-page-web');\n\n      }, 5000);\n\n    };\n\n    if (dropDownMenu) {\n\n      clearTimeout(timer);\n      dropDownMenu?.remove()\n\n      chevronButton?.classList.remove('drop-down-active');\n      chevronButton?.classList.add('account-menu-button');\n      profileText?.classList.remove('drop-down-text-active');\n\n      // if on mobile remove hidden home page to interact with feed/posts again\n      homePage?.classList.remove('home-page-web-hidden');\n      homePage?.classList.add('home-page-web');\n\n    };\n\n\n    const target = e.target as Element;\n\n    if (target.classList.contains('sign-out-text')) {\n      signOut();\n      return;\n    };\n\n    if (target.classList.contains('edit-profile-text')) {\n      toggleEditProfilePage();\n      return;\n    };\n\n    if (target.classList.contains('view-contributions-text')) {\n      toggleViewContributionsPage();\n      return;\n    };\n\n  };\n\n  if (userInstance.user) {\n    return (\n      <div className=\"profile-container\"\n        onClick={accountDropDown}\n        role=\"menu\"\n      >\n        <p className=\"logged-in-as-text\"\n          role=\"paragraph\">\n          Logged in as:\n        </p>\n        <div className=\"img-name-container\">\n          <img className=\"profile-img\"\n            referrerPolicy=\"no-referrer\"\n            src={userInstance.user.imgURL ? userInstance.user.imgURL : anonymousProfile}\n            alt=\"profile\" >\n          </img>\n          <p className=\"profile-text\" >\n            {userInstance.user.username}\n          </p>\n          <img className=\"account-menu-button\"\n            src={chevron}\n            alt=\"chevron\" >\n          </img>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"profile-container\" \n        onClick={accountDropDown}\n        role=\"menu\"\n      >\n        <p className=\"logged-in-as-text\"\n          role=\"paragraph\" >\n          Logged in as:\n        </p>\n        <div className=\"img-name-container\">\n          <p className=\"profile-text\">\n            {userRef.email}\n          </p>\n          <img className=\"account-menu-button\"\n            src={chevron}\n            alt=\"chevron\" >\n          </img>\n        </div>\n      </div>\n    );\n  };\n\n};\n\nexport default AccountDisplay;"],"names":["props","currentUser","signOut","toggleEditProfilePage","toggleViewContributionsPage","userRef","useState","user","comments","displayName","favoritePosts","posts","imgURL","uid","username","userInstance","setUserInstance","useEffect","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","db","getFirestore","userInstanceRef","doc","getDoc","userInstanceSnap","exists","userInstanceData","data","accountDropDown","e","timer","profileContainer","document","querySelector","dropDownMenu","chevronButton","profileText","homePage","classList","remove","add","createElement","textContent","editProfile","viewContributions","appendChild","setTimeout","clearTimeout","target","contains","className","onClick","role","referrerPolicy","src","anonymousProfile","alt","chevron","email"],"sourceRoot":""}